'use strict';
	
var apiKey;
var tempTypeFahrenheit 		= "F";
var tempTypeCelsius			= "C";
var defaultPressureUnit		= "mb";

/* Weather API endpoint */
var ENDPOINT 				= "http://api.openweathermap.org/data/2.5/weather?q=<KEYWORD>&APPID=<APP-KEY>";

/**
 * Module dependencies
 */
var http 					= require('http');


/**
 * Constructs a new class that provides access to Weather API
 * @constructor WeatherAPI
 * @param string API key
 */
var WeatherAPI = function(apiKeyString) {
    apiKey = apiKeyString;
};
	
/**
 * Getting the weather details based on given object
 * @param opts Object Opts 
 * @returns
 */
WeatherAPI.prototype.getWeather = function(opts)
{
	var tempInUnit	= opts.temp_unit;
	var location	= opts.location;
	location		= (!location || location.length === 0) ? "" : location.trim();
	tempInUnit		= (!tempInUnit || tempInUnit.length === 0) ? tempTypeFahrenheit : tempInUnit.trim().toUpperCase();
	
	return new Promise(function(resolve, reject){
		var uri 	= ENDPOINT.replace("<KEYWORD>", opts.location);
			uri		= uri.replace("<APP-KEY>", apiKey);
			
		http.get(uri, function(res) {
			var dataChunks = [];
			res.setEncoding('utf8');
			res.on("data", function(chunk) {
				dataChunks.push(chunk);
			});
			
			res.on("end", function() {
				var response = dataChunks.join('');
				
				// Convert the temperature units (Fahrenheit to Celsius) or (Celsius to Fahrenheit)
				response 	 = convertTemperatureInUnits(response, tempInUnit);
				
				resolve(response);
			});
		}).on("error", function(e) {
			reject(e.message);
		});
	});
};

/**
 * Convert the temperature based on request units
 * @param responseBody
 * @param tempInUnit
 * @returns
 */
function convertTemperatureInUnits(responseBody, tempInUnit)
{
	var jsonObj 						= JSON.parse(responseBody);
	
	jsonObj['main']['temp_unit'] 		= tempInUnit;
	jsonObj['main']['pressure_unit']	= defaultPressureUnit;
	jsonObj['main']['temp']		 		= getTemperature(jsonObj['main']['temp'],  tempInUnit);
	jsonObj['main']['temp_min']	 		= getTemperature(jsonObj['main']['temp_min'],  tempInUnit);
	jsonObj['main']['temp_max']	 		= getTemperature(jsonObj['main']['temp_max'],  tempInUnit);
	
	return jsonObj;
}

/**
 * Get the value of temperature
 * @param tempInResult
 * @param tempInUnit
 * @returns
 */
function getTemperature(tempInResult, tempInUnit)
{
	var temp;
	var tempF 	= Math.ceil((tempInResult) * 9 / 5 - 459.67);
	
	if( tempInUnit === tempTypeFahrenheit ){
		temp 	= tempF;
	} else {
		temp	= Math.ceil((tempF - 32) * 5 / 9);
	}
	return temp;
}

module.exports = WeatherAPI;
